/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LSMS;

import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;


/**
 *
 * @author Mr Olayinka
 */
public class Student_RecordTable2 extends javax.swing.JDialog {

  
     ResultSet rs=null ;
     Connection conn = null;
      Statement st = null;
      public static String ctk;
      
    public Student_RecordTable2(java.awt.Frame parent, boolean modal) throws SQLException, ClassNotFoundException, IOException, InstantiationException, IllegalAccessException {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        StdTable();


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        SRTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Students Records");
        setAlwaysOnTop(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        SRTable2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        SRTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SRTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        SRTable2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        SRTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SRTable2MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(SRTable2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1419, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public void StdTable() throws SQLException, ClassNotFoundException, IOException, InstantiationException, IllegalAccessException{
        //Class.forName("com.mysql.jdbc.Driver");
           Class.forName("org.sqlite.JDBC");
       conn = SqlConnect2.conDB();
                     st = conn.createStatement();
   
       String p ="select ID,MatricNo,Level,Course,Level_100_FirstSemester_GP,Level_100_SecondSemester_GP, Level_100_Final_CGPA , Level_200_FirstSemester_GP , Level_200_SecondSemester_GP , Level_200_Final_CGPA,   Level_300_FirstSemester_GP , Level_300_SecondSemester_GP, Level_300_Final_CGPA , Level_400_FirstSemester_GP , Level_400_SecondSemester_GP , Level_400_Final_CGPA  from tblstudents ";
                        rs = st.executeQuery(p);
                       SRTable2.setModel(DbUtils.resultSetToTableModel(rs));
             rs.close();
                st.close();
                  rs.close();
                        }
     
     
    private void SRTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SRTable2MouseClicked
        
    
        try {

            Class.forName("org.sqlite.JDBC");
             conn = SqlConnect2.conDB();

            int row = SRTable2.getSelectedRow();
              ctk = ( SRTable2.getModel().getValueAt(row, 0).toString());

            DefaultCategoryDataset dataset =  new DefaultCategoryDataset( );

            st = conn.createStatement();
            String p ="select ID,MatricNo,FirstName,MiddleName,LastName,Level,Course,Level_100_FirstSemester_GP,Level_100_SecondSemester_GP, Level_100_Final_CGPA ,  Level_200_FirstSemester_GP , Level_200_SecondSemester_GP , Level_200_Final_CGPA,   Level_300_FirstSemester_GP , Level_300_SecondSemester_GP, Level_300_Final_CGPA , Level_400_FirstSemester_GP , Level_400_SecondSemester_GP , Level_400_Final_CGPA from tblstudents where ID='"+ctk+"' ";
            rs = st.executeQuery(p);
            while (rs.next()){

                String ID = rs.getString("ID");
                String FirstName = rs.getString("FirstName");
                String MiddleName = rs.getString("MiddleName");
                String LastName = rs.getString("LastName");
                String mtn = rs.getString("MatricNo");
                String jj = ID + " - "+" "+ mtn +" - " +"  "+ FirstName +" "+MiddleName+" "+ LastName;

                double a = rs.getDouble("Level_100_FirstSemester_GP") ;
                float  b = rs.getFloat("Level_100_SecondSemester_GP");
                float c1 = rs.getFloat("Level_100_Final_CGPA");
                float  d = rs.getFloat("Level_200_FirstSemester_GP");
                float  e = rs.getFloat("Level_200_SecondSemester_GP");
                float  f = rs.getFloat("Level_200_Final_CGPA");
                float  g = rs.getFloat("Level_300_FirstSemester_GP");
                float h = rs.getFloat("Level_300_SecondSemester_GP");
                float  i = rs.getFloat("Level_300_Final_CGPA");
                float   j1 = rs.getFloat("Level_400_FirstSemester_GP");
                float   k = rs.getFloat("Level_400_SecondSemester_GP");
                float   l = rs.getFloat("Level_400_Final_CGPA");

                // SETS barChart VALUES
                dataset.addValue(a , jj ,"100L FirstSemester GPA");
                dataset.addValue(b , jj,"100L SecondSemester GPA");
                dataset.addValue(c1 , jj ,"100L Final CGPA");
                dataset.addValue(d , jj,"200L FirstSemester GPA");
                dataset.addValue(e , jj ,"200L SecondSemester GPA");
                dataset.addValue(f , jj,"200L Final CGPA");
                dataset.addValue(g , jj ,"300L FirstSemester GPA");
                dataset.addValue(h , jj,"300L SecondSemester GPA");
                dataset.addValue(i , jj ,"300L Final CGPA");
                dataset.addValue(j1 , jj,"400L FirstSemester GPA");
                dataset.addValue(k , jj ,"400L SecondSemester GPA");
                dataset.addValue(l , jj,"400L Final CGPA");

            }
          

            JFreeChart barChart = ChartFactory.createBarChart3D(
                "Records",
                "Levels ",
                "GPA-CGPA",
                dataset,
                PlotOrientation.VERTICAL,
                true, true, true);
            barChart.setBackgroundPaint(Color.lightGray);
            //           barChart.addSubtitle(new TextTitle("Most Def"));

        
            ChartFrame chartPanel = new ChartFrame("Student Record Chart", barChart );
            chartPanel.setSize(800, 470);
            chartPanel.setLocationRelativeTo(null);  
           this.dispose();
            chartPanel.setVisible(true);
             
            chartPanel .addWindowListener(new WindowAdapter() {
                public void windowClosing(WindowEvent evt) {

                    try {
                      
                        Student_RecordTable2 g = new Student_RecordTable2(null , false);
                        g.setVisible(true);
                        
                    } catch (SQLException | ClassNotFoundException | IOException | InstantiationException | IllegalAccessException ex) {
                       JOptionPane.showMessageDialog(null, ex);
                    }
                };
            });

            rs.close();
            st.close();

        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Error :" +ex.getMessage());
        } catch (IOException | InstantiationException | IllegalAccessException ex) {
             Logger.getLogger(Student_RecordTable2.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_SRTable2MouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.dispose();
        Student_Record g = new Student_Record(null, true);
        g.setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Student_RecordTable2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
         //</editor-fold>
         //</editor-fold>
         
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                
                try {
                    Student_RecordTable2 dialog = new Student_RecordTable2(new javax.swing.JFrame(), true);
                    dialog.setVisible(true);
                } catch (SQLException | ClassNotFoundException | IOException | InstantiationException | IllegalAccessException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTable SRTable2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables


    //        TableColumnAdjuster g = new TableColumnAdjuster(SRTable2);
//        g.adjustColumns();
    
    
//        for(int column = 0; column <SRTable2.getColumnCount();column++){
//         TableColumn tc = SRTable2.getColumnModel().getColumn(column);
//        tc.setPreferredWidth(190);}
    
        
//for(int column = 0; column <SRTable2.getColumnCount();column++){
//
//        TableColumn tc = SRTable2.getColumnModel().getColumn(column);
//        int pw =tc.getMinWidth();
//        int maxwidth =tc.getMaxWidth();
//        
//        for(int row =0; row <SRTable2.getRowCount(); row++){
//
//            TableCellRenderer cr = SRTable2.getCellRenderer(row, column); 
//            Component c =SRTable2.prepareRenderer(cr, row, column);
//            int width =c.getPreferredSize().width + SRTable2.getIntercellSpacing().width;
//            pw = Math.max(pw, width);
//            if(pw >= maxwidth){
//            pw = maxwidth;
//            break;
//            
//            }
// }
//        tc.setPreferredWidth(pw);
//}


}
