/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LSMS;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.filechooser.FileNameExtensionFilter;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;



/**
 *
 * @author Mr Olayinka
 */
public class Student_Report extends javax.swing.JDialog {

    Connection conn= null;
    Statement st=null;
            ResultSet rs = null;
     static JasperViewer jn =null;
       JasperDesign jd = null;
        JRDesignQuery nq = null;
        JasperPrint jp=null;
                JasperReport jr =null;
                String path="";
                HashMap param= null;
       
    public Student_Report(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        txtlogo.setVisible(false);
        setLocationRelativeTo(null);
    }

        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PrintIDReport = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        GenerateOverallReport = new javax.swing.JButton();
        IDCard = new javax.swing.JButton();
        txtlogo = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Report");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        PrintIDReport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LSMS/yImg1.jpg"))); // NOI18N
        PrintIDReport.setText("Print Report");
        PrintIDReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintIDReportActionPerformed(evt);
            }
        });

        jLabel1.setText("Enter ID");

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        GenerateOverallReport.setText("Generate Overall Report");
        GenerateOverallReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerateOverallReportActionPerformed(evt);
            }
        });

        IDCard.setText("Print  ID Card");
        IDCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDCardActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(GenerateOverallReport))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IDCard, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtlogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(PrintIDReport)
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(txtlogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PrintIDReport)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IDCard)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(GenerateOverallReport)
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void PrintIDReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintIDReportActionPerformed
     
    
         if (path == "") {

            JOptionPane.showMessageDialog(null, " Please choose a logo for your report", "Report Logo", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
         
      if(jTextField1.getText().equals("") ){

                JOptionPane.showMessageDialog(null, " Enter ID" ,"ID Empty", JOptionPane.INFORMATION_MESSAGE);
                jTextField1.requestFocus();
                return;
            }
           
         
         param = new HashMap();
         param.put("logo", new ImageIcon(path));
        
        try {
                
                conn = SqlConnect2.conDB();
                 st= conn.createStatement();
                String g = "Select id from tblstudents where id = '"+jTextField1.getText()+"' ";
                rs= st.executeQuery(g);
          if(rs.next()){
              this.dispose();
              InputStream is = Student_Report.class.getClassLoader().getResourceAsStream("prop.properties");
            Properties props = new Properties();
            props.load(is);
              
            
            jd = JRXmlLoader.load(props.getProperty("Report"));
            String s= "select MatricNo,FirstName,LastName,Level,Course,Image,Level_100_FirstSemester_GP,Level_100_SecondSemester_GP, Level_100_Final_CGPA , Level_200_FirstSemester_GP , Level_200_SecondSemester_GP , Level_200_Final_CGPA,   Level_300_FirstSemester_GP , Level_300_SecondSemester_GP, Level_300_Final_CGPA , Level_400_FirstSemester_GP , Level_400_SecondSemester_GP , Level_400_Final_CGPA from tblstudents where id ='"+jTextField1.getText()+"'";
            nq = new  JRDesignQuery();
            nq.setText(s);
            jd.setQuery(nq);
             jr = JasperCompileManager.compileReport(jd);
             jp =  JasperFillManager.fillReport(jr,param, conn); 
            
       
           jn = new JasperViewer(jp,false);
           jn.setTitle("Student Report");
           jn.setZoomRatio(new Float(0.60));
           jn.setSize(490, 593);
            jn.setLocationRelativeTo(null);
         
                        Progress();
                        
                        //JasperViewer.viewReport(jp,false); 
                    
             }else{
                 JOptionPane.showMessageDialog(this, "ID doesn't exist!");
                 jTextField1.setText("");
                  jTextField1.requestFocus();
             }
        } catch (JRException | IOException | ClassNotFoundException | InstantiationException | IllegalAccessException | InterruptedException |SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
        
       
    }//GEN-LAST:event_PrintIDReportActionPerformed

    private void GenerateOverallReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerateOverallReportActionPerformed
        if (path == "") {

            JOptionPane.showMessageDialog(null, " Please choose a logo for your report", "Report Logo", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        param = new HashMap();
         param.put("logo", new ImageIcon(path));
        try {
            conn = SqlConnect2.conDB();
             this.dispose();
             InputStream is = Student_Report.class.getClassLoader().getResourceAsStream("prop.properties");
            Properties props = new Properties();
            props.load(is);
            
        jd =JRXmlLoader.load(props.getProperty("Report"));
            String s= "select MatricNo,FirstName,LastName,Level,Course,Image,Level_100_FirstSemester_GP,Level_100_SecondSemester_GP, Level_100_Final_CGPA , Level_200_FirstSemester_GP , Level_200_SecondSemester_GP , Level_200_Final_CGPA,   Level_300_FirstSemester_GP , Level_300_SecondSemester_GP, Level_300_Final_CGPA , Level_400_FirstSemester_GP , Level_400_SecondSemester_GP , Level_400_Final_CGPA from tblstudents ";
            nq = new  JRDesignQuery();
            nq.setText(s);
            jd.setQuery(nq);
         jr = JasperCompileManager.compileReport(jd);
             jp =  JasperFillManager.fillReport(jr, param, conn);
            
           
          jn = new JasperViewer(jp,false);
           jn.setTitle("Student Report");
           jn.setZoomRatio(new Float(0.60));
           jn.setSize(490, 593);
            jn.setLocationRelativeTo(null);
                            Progress();
                // JasperViewer.viewReport(jp, false);
            
          
        } catch (JRException | IOException | ClassNotFoundException | InstantiationException | InterruptedException| IllegalAccessException ex) {
            Logger.getLogger(Admin_Records.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_GenerateOverallReportActionPerformed

    private void IDCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDCardActionPerformed
    
        //ID Card Printing
       
        
        if(jTextField1.getText().equals("") ){

                JOptionPane.showMessageDialog(null, " Enter ID" ,"ID Empty", JOptionPane.INFORMATION_MESSAGE);
                jTextField1.requestFocus();
                return;
            }
       
       
        
        try {
                      
                conn = SqlConnect2.conDB();
                 st = conn.createStatement();
                String g = "Select id from tblstudents where id = '"+jTextField1.getText()+"' ";
                 rs = st.executeQuery(g);
          if(rs.next()){
              this.dispose();
                  
              InputStream is = Student_Report.class.getClassLoader().getResourceAsStream("prop.properties");
            Properties props = new Properties();
            props.load(is);
            
          jd =JRXmlLoader.load(props.getProperty("IDcardReport"));
            String s= "select MatricNo,FirstName,LastName,Course,Image from tblstudents where id ='"+jTextField1.getText()+"'";
            rs = st.executeQuery(s);
          
           nq = new  JRDesignQuery();
            nq.setText(s);
            jd.setQuery(nq);
            jr = JasperCompileManager.compileReport(jd);
          jp =  JasperFillManager.fillReport(jr, null, conn);
           
//            JasperExportManager.exportReportToPdf(jp);
//              JRXlsExporter exporter =new JRXlsExporter();
//              exporter.setParameter(JRXlsExporterParameter.INPUT_FILE_NAME, jp);
//              exporter.setParameter(JRXlsExporterParameter.OUTPUT_FILE_NAME, jp);
//              exporter.exportReport();
          // this.dispose();
           
           jn = new JasperViewer(jp,false);
           jn.setTitle("ID Card");
           jn.setZoomRatio(new Float(0.60));
           jn.setSize(490, 593);
            jn.setLocationRelativeTo(null);
            
                        Progress();
                    
//         JasperViewer.viewReport(jp,false); 


             }else{
                 JOptionPane.showMessageDialog(this, "ID doesn't exist!");
                 jTextField1.setText("");
                  jTextField1.requestFocus();
             }
        } catch (JRException | IOException | ClassNotFoundException | InstantiationException | IllegalAccessException |InterruptedException | SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_IDCardActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        JFileChooser fille = new JFileChooser();
        fille.setCurrentDirectory(new File(System.getProperty("user.home")));
        //filter the files
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", ".jpg",".gif",".png");
        fille.addChoosableFileFilter(filter);

        int result = fille.showSaveDialog(null);
        //if the user clicks on save in Jfilechooser
        if(result == JFileChooser.APPROVE_OPTION){
            File selectedFile = fille.getSelectedFile();
            path = selectedFile.getAbsolutePath();
            txtlogo.setText(path);
            JOptionPane.showMessageDialog(this, " Logo Selected!");
           
        }
        else if(result == JFileChooser.CANCEL_OPTION){
            JOptionPane.showMessageDialog(this, " No File Was Selected, Select One!!!");

        }
        
       
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Student_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Student_Report dialog = new Student_Report(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton GenerateOverallReport;
    private javax.swing.JButton IDCard;
    private javax.swing.JButton PrintIDReport;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField txtlogo;
    // End of variables declaration//GEN-END:variables

// public static void  Progress(){ 
//         
////        final  ProgressDialog  g = new ProgressDialog();
////             ImageIcon icon = new ImageIcon("src/wait.gif");
//////          g.setSize(124, 46);
////         ProgressDialog.zero.setIcon(icon);
////        g.setLocationRelativeTo(null);
////         g.setVisible(true);
////        Thread t = new Thread(new Runnable() {
////      public void run() {
////       g.setVisible(true);
////      }
////    });
////       t.start();
//
////        for ( int i = 0; i <= 100; i++) {
////        ProgressDialog.jProgressBar1.setValue(i);
////          if(ProgressDialog.jProgressBar1.getValue() == 100){
////         g.setVisible(false);
////          }
////          try {
////            Thread.sleep(25);
////          } catch (InterruptedException e) {
////            e.printStackTrace();
////          }
////        }//Ends FOR loop
////     
//
//
//}
      


public  static void  Progress() throws InterruptedException{ 
          
          final JFrame g = new JFrame();
          g.setUndecorated(true);
          g.setSize(160, 110);
          ImageIcon icon = new ImageIcon("src/al.gif");
          g.add(new JLabel("", icon, JLabel.CENTER));
          g.setLocationRelativeTo(null);
          
        SwingWorker<String, Void>
                  worker = new SwingWorker<String, Void>() {
              @Override
              protected String doInBackground() throws Exception {
                  Thread.sleep(2900);
                   jn.setVisible(true);
                  return null;
              }
                @Override
                  protected void done(){
                       
                 g.dispose();
               
                               }
                  
          };
          worker.execute();
        
            g.setVisible(true);
    
      }
}
